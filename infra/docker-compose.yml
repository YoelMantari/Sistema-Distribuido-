version: "3.8"

services:
  #########################
  # 1) RabbitMQ (with management plugin)
  #########################
  rabbitmq:
    image: rabbitmq:3-management
    container_name: sd-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - sd-network

  #########################
  # 2) PostgreSQL para servicio-ventas
  #########################
  bd-postgres:
    image: postgres:15
    container_name: sd-postgres
    environment:
      POSTGRES_DB: ventas_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      # El init_db.sql está en ../servicio-ventas/src/scripts/
      - ../servicio-ventas/src/scripts/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql:ro
    networks:
      - sd-network

  #########################
  # 3) servicio-ventas (Java + Spring Boot)
  #########################
  servicio-ventas:
    build:
      context: ../servicio-ventas
      dockerfile: Dockerfile
    container_name: sd-ventas
    depends_on:
      - rabbitmq
      - bd-postgres
    environment:
      SPRING_DATASOURCE_URL:      jdbc:postgresql://bd-postgres:5432/ventas_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_RABBITMQ_HOST:       rabbitmq
      SPRING_RABBITMQ_PORT:       5672
      SPRING_RABBITMQ_USERNAME:   guest
      SPRING_RABBITMQ_PASSWORD:   guest
      APP_RABBITMQ_EXCHANGE:      my_exchange
      APP_RABBITMQ_COLA_VALIDADA: registro.validado
      APP_RABBITMQ_ROUTING_GUARDADO:   registro.guardado
      APP_RABBITMQ_ROUTING_RECHAZADO:  registro.rechazado
    ports:
      - "8001:8001"
    networks:
      - sd-network
    restart: unless-stopped

  #########################
  # 4) MySQL para servicio-dni
  #########################
  # bd-mysql:
  #   image: mysql:8
  #   container_name: sd-mysql
  #   environment:
  #     MYSQL_ROOT_PASSWORD: secret
  #     MYSQL_DATABASE: dni_db
  #   volumes:
  #     # El init_db.sql está en ../servicio-dni/scripts/
  #     - ../servicio-dni/scripts/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql:ro
  #   ports:
  #     - "3307:3306"
  #   networks:
  #     - sd-network

  #   healthcheck:
  #     test: ["CMD", "mysqladmin", "ping", "--silent", "-h", "localhost", "-P", "3306"]
  #     interval: 5s
  #     timeout: 3s
  #     retries: 5

  #########################
  # 5) servicio-dni (Python + FastAPI)
  #########################
  servicio-dni:
    build:
      context: ../servicio-dni
      dockerfile: Dockerfile
    container_name: sd-dni
    depends_on:
      rabbitmq:
        condition: service_started
      #bd-mysql:
      #  condition: service_healthy
    environment:
      MYSQL_HOST: centerbeam.proxy.rlwy.net  
      MYSQL_PORT: 35140  
      MYSQL_USER: root  
      MYSQL_PASSWORD: xmmvAFJemHPNrmudTkCRqZCnBStzBxrZ  
      MYSQL_DATABASE: railway
      RABBITMQ_HOST:  rabbitmq
      RABBITMQ_PORT:  5672
    ports:
      - "8000:8000"
    networks:
      - sd-network
    restart: unless-stopped

networks:
  sd-network:
    driver: bridge
